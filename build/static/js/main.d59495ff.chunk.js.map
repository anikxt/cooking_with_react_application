{"version":3,"sources":["components/Ingredient.js","components/IngredientList.js","components/Recipe.js","components/RecipeList.js","components/RecipeIngredientEdit.js","components/RecipeEdit.js","components/App.js","index.js"],"names":["Ingredient","name","amount","IngredientList","ingredientElements","ingredients","map","ingredient","id","className","Recipe","props","useContext","RecipeContext","handleRecipeDelete","handleRecipeSelect","cookTime","servings","instructions","onClick","RecipeList","recipes","handleRecipeAdd","recipe","RecipeIngredientEdit","handleIngredientChange","handleIngredientDelete","handleChange","changes","type","onChange","e","target","value","RecipeEdit","handleRecipeChange","newIngredients","index","findIndex","i","filter","undefined","htmlFor","min","parseInt","newIngredient","Date","now","toString","handleIngredientAdd","React","createContext","LOCAL_STORAGE_KEY","sampleRecipes","App","useState","selectedRecipeId","setSelectedRecipeId","setRecipes","selectedRecipe","find","useEffect","recipeJSON","localStorage","getItem","JSON","parse","setItem","stringify","recipeContextValue","newRecipe","newRecipes","r","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d59495ff.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function Ingredient({ name, amount }) {\n  return (\n    <>\n      <span>{name}</span>\n      <span>{amount}</span>\n    </>\n  )\n}\n","import React from 'react'\nimport Ingredient from './Ingredient'\n\nexport default function IngredientList({ ingredients}) {\n  const ingredientElements = ingredients.map(ingredient => {\n    return <Ingredient key={ingredient.id} {...ingredient} />\n  })\n  return (\n    <div className=\"ingredient-grid\">\n      {ingredientElements}\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport IngredientList from './IngredientList';\nimport { RecipeContext } from './App'\n\nexport default function Recipe(props) {\n  const { handleRecipeDelete, handleRecipeSelect } = useContext(RecipeContext)\n  const {\n    id,\n    name,\n    cookTime,\n    servings,\n    instructions,\n    ingredients\n  } = props\n  return (\n    <div className=\"recipe\">\n      <div className=\"recipe__header\">\n        <h3 className=\"recipe__title\">{name}</h3>\n        <div>\n          <button\n            className=\"btn btn--primary mr-1\"\n            onClick={() => handleRecipeSelect(id)}\n          >\n            Edit\n          </button>\n          <button\n            className=\"btn btn--danger\"\n            onClick={() => handleRecipeDelete(id)}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n      <div className=\"recipe__row\">\n        <span className=\"recipe__label\">Cook Time:</span>\n        <span className=\"recipe__value\">{cookTime}</span>\n      </div>\n      <div className=\"recipe__row\">\n        <span className=\"recipe__label\">Servings:</span>\n        <span className=\"recipe__value\">{servings}</span>\n      </div>\n      <div className=\"recipe__row\">\n        <span className=\"recipe__label\">Instructions:</span>\n        <div className=\"recipe__value recipe__instructions recipe__value--indented\">{instructions}</div>\n      </div>\n      <div className=\"recipe__row\">\n        <span className=\"recipe__label\">Ingredients:</span>\n        <div className=\"recipe__value recipe__value--indented\">\n          <IngredientList ingredients={ingredients} />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { useContext } from 'react'\nimport Recipe from './Recipe'\nimport { RecipeContext } from './App'\n\nexport default function RecipeList({ recipes }) {\n  const { handleRecipeAdd } = useContext(RecipeContext)\n\n  return (\n    <div className=\"recipe-list\">\n      <div>\n        {recipes.map(recipe => {\n          return (\n            <Recipe key={recipe.id} {...recipe} />\n          )\n        })}\n      </div>\n      <div className=\"recipe-list__add-recipe-btn-container\">\n        <button\n          className=\"btn btn--primary\"\n          onClick={handleRecipeAdd}\n        >\n          Add Recipe\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function RecipeIngredientEdit(props) {\n  const {\n    ingredient,\n    handleIngredientChange,\n    handleIngredientDelete\n  } = props\n\n  function handleChange(changes) {\n    handleIngredientChange(ingredient.id, { ...ingredient, ...changes })\n  }\n  return (\n    <>\n      <input\n        className=\"recipe-edit__input\"\n        type=\"text\"\n        onChange={(e) => handleChange({ name: e.target.value })}\n        value={ingredient.name}\n      />\n      <input\n        className=\"recipe-edit__input\"\n        type=\"text\"\n        onChange={(e) => handleChange({ amount: e.target.value })}\n        value={ingredient.amount}\n      />\n      <button\n        className=\"btn btn--danger\"\n        onClick={() => handleIngredientDelete(ingredient.id)}\n      >\n        &times;\n      </button>\n    </>\n  )\n}\n","import React, { useContext } from 'react';\nimport RecipeIngredientEdit from './RecipeIngredientEdit';\nimport { RecipeContext } from './App';\n\nexport default function RecipeEdit({ recipe }) {\n  const { handleRecipeChange, handleRecipeSelect } = useContext(RecipeContext);\n\n  function handleChange(changes) {\n    handleRecipeChange(recipe.id, { ...recipe, ...changes });\n  }\n\n  function handleIngredientChange(id, ingredient) {\n    const newIngredients = [...recipe.ingredients];\n    const index = newIngredients.findIndex((i) => i.id === id);\n    newIngredients[index] = ingredient;\n    handleChange({ ingredients: newIngredients });\n  }\n\n  function handleIngredientAdd() {\n    const newIngredient = {\n      id: Date.now().toString(),\n      name: '',\n      amount: '',\n    };\n    handleChange({ ingredients: [...recipe.ingredients, newIngredient] });\n  }\n\n  function handleIngredientDelete(id) {\n    handleChange({\n      ingredients: recipe.ingredients.filter((i) => i.id !== id),\n    });\n  }\n\n  return (\n    <div className=\"recipe-edit\">\n      <div className=\"recipe-edit__remove-button-container\">\n        <button\n          className=\"btn recipe-edit__remove-button\"\n          onClick={() => handleRecipeSelect(undefined)}\n        >\n          &times;\n        </button>\n      </div>\n      <div className=\"recipe-edit__details-grid\">\n        <label htmlFor=\"name\" className=\"recipe-edit__label\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={recipe.name}\n          onChange={(e) => handleChange({ name: e.target.value })}\n          className=\"recipe-edit__input\"\n        />\n        <label htmlFor=\"cookTime\" className=\"recipe-edit__label\">\n          Cook Time\n        </label>\n        <input\n          type=\"text\"\n          name=\"cookTime\"\n          id=\"cookTime\"\n          value={recipe.cookTime}\n          onChange={(e) => handleChange({ cookTime: e.target.value })}\n          className=\"recipe-edit__input\"\n        />\n        <label htmlFor=\"servings\" className=\"recipe-edit__label\">\n          Servings\n        </label>\n        <input\n          type=\"number\"\n          min=\"1\"\n          name=\"servings\"\n          id=\"servings\"\n          value={recipe.servings}\n          onChange={(e) =>\n            handleChange({ servings: parseInt(e.target.value) || '' })\n          }\n          className=\"recipe-edit__input\"\n        />\n        <label htmlFor=\"instructions\" className=\"recipe-edit__label\">\n          Instructions\n        </label>\n        <textarea\n          name=\"instructions\"\n          className=\"recipe-edit__input\"\n          onChange={(e) => handleChange({ instructions: e.target.value })}\n          value={recipe.instructions}\n          id=\"instructions\"\n        />\n      </div>\n      <br />\n      <label className=\"recipe-edit__label\">Ingredients</label>\n      <div className=\"recipe-edit__ingredient-grid\">\n        <div>Name</div>\n        <div>Amount</div>\n        <div></div>\n        {recipe.ingredients.map((ingredient) => (\n          <RecipeIngredientEdit\n            key={ingredient.id}\n            handleIngredientChange={handleIngredientChange}\n            handleIngredientDelete={handleIngredientDelete}\n            ingredient={ingredient}\n          />\n        ))}\n      </div>\n      <div className=\"recipe-edit__add-ingredient-btn-container\">\n        <button\n          className=\"btn btn--primary\"\n          onClick={() => handleIngredientAdd()}\n        >\n          Add Ingredient\n        </button>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport RecipeList from './RecipeList';\nimport '../css/app.css';\nimport RecipeEdit from './RecipeEdit';\n\nexport const RecipeContext = React.createContext();\nconst LOCAL_STORAGE_KEY = 'cookingWithReact.recipes';\n\nfunction App() {\n  const [selectedRecipeId, setSelectedRecipeId] = useState();\n  const [recipes, setRecipes] = useState(sampleRecipes);\n  const selectedRecipe = recipes.find(\n    (recipe) => recipe.id === selectedRecipeId\n  );\n\n  useEffect(() => {\n    const recipeJSON = localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (recipeJSON != null) setRecipes(JSON.parse(recipeJSON));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(recipes));\n  }, [recipes]);\n\n  const recipeContextValue = {\n    handleRecipeAdd,\n    handleRecipeDelete,\n    handleRecipeSelect,\n    handleRecipeChange,\n  };\n\n  function handleRecipeSelect(id) {\n    setSelectedRecipeId(id);\n  }\n\n  function handleRecipeAdd() {\n    const newRecipe = {\n      id: Date.now().toString(),\n      name: '',\n      servings: 1,\n      cookTime: '',\n      instructions: '',\n      ingredients: [{ id: Date.now().toString(), name: '', amount: '' }],\n    };\n\n    setSelectedRecipeId(newRecipe.id);\n    setRecipes([...recipes, newRecipe]);\n  }\n\n  function handleRecipeChange(id, recipe) {\n    const newRecipes = [...recipes];\n    const index = newRecipes.findIndex((r) => r.id === id);\n    newRecipes[index] = recipe;\n    setRecipes(newRecipes);\n  }\n\n  function handleRecipeDelete(id) {\n    if (selectedRecipeId != null && selectedRecipeId === id) {\n      setSelectedRecipeId(undefined);\n    }\n    setRecipes(recipes.filter((recipe) => recipe.id !== id));\n  }\n\n  return (\n    <RecipeContext.Provider value={recipeContextValue}>\n      <RecipeList recipes={recipes} />\n      {selectedRecipe && <RecipeEdit recipe={selectedRecipe} />}\n    </RecipeContext.Provider>\n  );\n}\n\nconst sampleRecipes = [\n  {\n    id: 1,\n    name: 'Plain Chicken',\n    servings: 3,\n    cookTime: '1:45',\n    instructions:\n      '1. Put salt on chicken\\n2. Put chicken in oven\\n3. Eat chicken',\n    ingredients: [\n      {\n        id: 1,\n        name: 'Chicken',\n        amount: '2 Pounds',\n      },\n      {\n        id: 2,\n        name: 'Salt',\n        amount: '1 Tbs',\n      },\n    ],\n  },\n  {\n    id: 2,\n    name: 'Plain Pork',\n    servings: 5,\n    cookTime: '0:45',\n    instructions: '1. Put paprika on pork\\n2. Put pork in oven\\n3. Eat pork',\n    ingredients: [\n      {\n        id: 1,\n        name: 'Pork',\n        amount: '3 Pounds',\n      },\n      {\n        id: 2,\n        name: 'Paprika',\n        amount: '2 Tbs',\n      },\n    ],\n  },\n];\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}