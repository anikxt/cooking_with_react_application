{"ast":null,"code":"import _toConsumableArray from\"/media/blaze/Data/All Github Repos/cooking_with_react_application/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/media/blaze/Data/All Github Repos/cooking_with_react_application/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React,{useContext}from'react';import RecipeIngredientEdit from'./RecipeIngredientEdit';import{RecipeContext}from'./App';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function RecipeEdit(_ref){var recipe=_ref.recipe;var _useContext=useContext(RecipeContext),handleRecipeChange=_useContext.handleRecipeChange,handleRecipeSelect=_useContext.handleRecipeSelect;function handleChange(changes){handleRecipeChange(recipe.id,_objectSpread(_objectSpread({},recipe),changes));}function handleIngredientChange(id,ingredient){var newIngredients=_toConsumableArray(recipe.ingredients);var index=newIngredients.findIndex(function(i){return i.id===id;});newIngredients[index]=ingredient;handleChange({ingredients:newIngredients});}function handleIngredientAdd(){var newIngredient={id:Date.now().toString(),name:'',amount:''};handleChange({ingredients:[].concat(_toConsumableArray(recipe.ingredients),[newIngredient])});}function handleIngredientDelete(id){handleChange({ingredients:recipe.ingredients.filter(function(i){return i.id!==id;})});}return/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-edit\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"recipe-edit__remove-button-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn recipe-edit__remove-button\",onClick:function onClick(){return handleRecipeSelect(undefined);},children:\"\\xD7\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-edit__details-grid\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",className:\"recipe-edit__label\",children:\"Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"name\",id:\"name\",value:recipe.name,onChange:function onChange(e){return handleChange({name:e.target.value});},className:\"recipe-edit__input\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"cookTime\",className:\"recipe-edit__label\",children:\"Cook Time\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"cookTime\",id:\"cookTime\",value:recipe.cookTime,onChange:function onChange(e){return handleChange({cookTime:e.target.value});},className:\"recipe-edit__input\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"servings\",className:\"recipe-edit__label\",children:\"Servings\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",min:\"1\",name:\"servings\",id:\"servings\",value:recipe.servings,onChange:function onChange(e){return handleChange({servings:parseInt(e.target.value)||''});},className:\"recipe-edit__input\"}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"instructions\",className:\"recipe-edit__label\",children:\"Instructions\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"instructions\",className:\"recipe-edit__input\",onChange:function onChange(e){return handleChange({instructions:e.target.value});},value:recipe.instructions,id:\"instructions\"})]}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{className:\"recipe-edit__label\",children:\"Ingredients\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-edit__ingredient-grid\",children:[/*#__PURE__*/_jsx(\"div\",{children:\"Name\"}),/*#__PURE__*/_jsx(\"div\",{children:\"Amount\"}),/*#__PURE__*/_jsx(\"div\",{}),recipe.ingredients.map(function(ingredient){return/*#__PURE__*/_jsx(RecipeIngredientEdit,{handleIngredientChange:handleIngredientChange,handleIngredientDelete:handleIngredientDelete,ingredient:ingredient},ingredient.id);})]}),/*#__PURE__*/_jsx(\"div\",{className:\"recipe-edit__add-ingredient-btn-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"btn btn--primary\",onClick:function onClick(){return handleIngredientAdd();},children:\"Add Ingredient\"})})]});}","map":{"version":3,"sources":["/media/blaze/Data/All Github Repos/cooking_with_react_application/src/components/RecipeEdit.js"],"names":["React","useContext","RecipeIngredientEdit","RecipeContext","RecipeEdit","recipe","handleRecipeChange","handleRecipeSelect","handleChange","changes","id","handleIngredientChange","ingredient","newIngredients","ingredients","index","findIndex","i","handleIngredientAdd","newIngredient","Date","now","toString","name","amount","handleIngredientDelete","filter","undefined","e","target","value","cookTime","servings","parseInt","instructions","map"],"mappings":"+SAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CACA,MAAOC,CAAAA,oBAAP,KAAiC,wBAAjC,CACA,OAASC,aAAT,KAA8B,OAA9B,C,wFAEA,cAAe,SAASC,CAAAA,UAAT,MAAgC,IAAVC,CAAAA,MAAU,MAAVA,MAAU,CAC7C,gBAAmDJ,UAAU,CAACE,aAAD,CAA7D,CAAQG,kBAAR,aAAQA,kBAAR,CAA4BC,kBAA5B,aAA4BA,kBAA5B,CAEA,QAASC,CAAAA,YAAT,CAAsBC,OAAtB,CAA+B,CAC7BH,kBAAkB,CAACD,MAAM,CAACK,EAAR,gCAAiBL,MAAjB,EAA4BI,OAA5B,EAAlB,CACD,CAED,QAASE,CAAAA,sBAAT,CAAgCD,EAAhC,CAAoCE,UAApC,CAAgD,CAC9C,GAAMC,CAAAA,cAAc,oBAAOR,MAAM,CAACS,WAAd,CAApB,CACA,GAAMC,CAAAA,KAAK,CAAGF,cAAc,CAACG,SAAf,CAAyB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACP,EAAF,GAASA,EAAhB,EAAzB,CAAd,CACAG,cAAc,CAACE,KAAD,CAAd,CAAwBH,UAAxB,CACAJ,YAAY,CAAC,CAAEM,WAAW,CAAED,cAAf,CAAD,CAAZ,CACD,CAED,QAASK,CAAAA,mBAAT,EAA+B,CAC7B,GAAMC,CAAAA,aAAa,CAAG,CACpBT,EAAE,CAAEU,IAAI,CAACC,GAAL,GAAWC,QAAX,EADgB,CAEpBC,IAAI,CAAE,EAFc,CAGpBC,MAAM,CAAE,EAHY,CAAtB,CAKAhB,YAAY,CAAC,CAAEM,WAAW,8BAAMT,MAAM,CAACS,WAAb,GAA0BK,aAA1B,EAAb,CAAD,CAAZ,CACD,CAED,QAASM,CAAAA,sBAAT,CAAgCf,EAAhC,CAAoC,CAClCF,YAAY,CAAC,CACXM,WAAW,CAAET,MAAM,CAACS,WAAP,CAAmBY,MAAnB,CAA0B,SAACT,CAAD,QAAOA,CAAAA,CAAC,CAACP,EAAF,GAASA,EAAhB,EAA1B,CADF,CAAD,CAAZ,CAGD,CAED,mBACE,aAAK,SAAS,CAAC,aAAf,wBACE,YAAK,SAAS,CAAC,sCAAf,uBACE,eACE,SAAS,CAAC,gCADZ,CAEE,OAAO,CAAE,yBAAMH,CAAAA,kBAAkB,CAACoB,SAAD,CAAxB,EAFX,kBADF,EADF,cASE,aAAK,SAAS,CAAC,2BAAf,wBACE,cAAO,OAAO,CAAC,MAAf,CAAsB,SAAS,CAAC,oBAAhC,kBADF,cAIE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,MAFP,CAGE,EAAE,CAAC,MAHL,CAIE,KAAK,CAAEtB,MAAM,CAACkB,IAJhB,CAKE,QAAQ,CAAE,kBAACK,CAAD,QAAOpB,CAAAA,YAAY,CAAC,CAAEe,IAAI,CAAEK,CAAC,CAACC,MAAF,CAASC,KAAjB,CAAD,CAAnB,EALZ,CAME,SAAS,CAAC,oBANZ,EAJF,cAYE,cAAO,OAAO,CAAC,UAAf,CAA0B,SAAS,CAAC,oBAApC,uBAZF,cAeE,cACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,UAFP,CAGE,EAAE,CAAC,UAHL,CAIE,KAAK,CAAEzB,MAAM,CAAC0B,QAJhB,CAKE,QAAQ,CAAE,kBAACH,CAAD,QAAOpB,CAAAA,YAAY,CAAC,CAAEuB,QAAQ,CAAEH,CAAC,CAACC,MAAF,CAASC,KAArB,CAAD,CAAnB,EALZ,CAME,SAAS,CAAC,oBANZ,EAfF,cAuBE,cAAO,OAAO,CAAC,UAAf,CAA0B,SAAS,CAAC,oBAApC,sBAvBF,cA0BE,cACE,IAAI,CAAC,QADP,CAEE,GAAG,CAAC,GAFN,CAGE,IAAI,CAAC,UAHP,CAIE,EAAE,CAAC,UAJL,CAKE,KAAK,CAAEzB,MAAM,CAAC2B,QALhB,CAME,QAAQ,CAAE,kBAACJ,CAAD,QACRpB,CAAAA,YAAY,CAAC,CAAEwB,QAAQ,CAAEC,QAAQ,CAACL,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR,EAA4B,EAAxC,CAAD,CADJ,EANZ,CASE,SAAS,CAAC,oBATZ,EA1BF,cAqCE,cAAO,OAAO,CAAC,cAAf,CAA8B,SAAS,CAAC,oBAAxC,0BArCF,cAwCE,iBACE,IAAI,CAAC,cADP,CAEE,SAAS,CAAC,oBAFZ,CAGE,QAAQ,CAAE,kBAACF,CAAD,QAAOpB,CAAAA,YAAY,CAAC,CAAE0B,YAAY,CAAEN,CAAC,CAACC,MAAF,CAASC,KAAzB,CAAD,CAAnB,EAHZ,CAIE,KAAK,CAAEzB,MAAM,CAAC6B,YAJhB,CAKE,EAAE,CAAC,cALL,EAxCF,GATF,cAyDE,aAzDF,cA0DE,cAAO,SAAS,CAAC,oBAAjB,yBA1DF,cA2DE,aAAK,SAAS,CAAC,8BAAf,wBACE,6BADF,cAEE,+BAFF,cAGE,cAHF,CAIG7B,MAAM,CAACS,WAAP,CAAmBqB,GAAnB,CAAuB,SAACvB,UAAD,qBACtB,KAAC,oBAAD,EAEE,sBAAsB,CAAED,sBAF1B,CAGE,sBAAsB,CAAEc,sBAH1B,CAIE,UAAU,CAAEb,UAJd,EACOA,UAAU,CAACF,EADlB,CADsB,EAAvB,CAJH,GA3DF,cAwEE,YAAK,SAAS,CAAC,2CAAf,uBACE,eACE,SAAS,CAAC,kBADZ,CAEE,OAAO,CAAE,yBAAMQ,CAAAA,mBAAmB,EAAzB,EAFX,4BADF,EAxEF,GADF,CAmFD","sourcesContent":["import React, { useContext } from 'react';\nimport RecipeIngredientEdit from './RecipeIngredientEdit';\nimport { RecipeContext } from './App';\n\nexport default function RecipeEdit({ recipe }) {\n  const { handleRecipeChange, handleRecipeSelect } = useContext(RecipeContext);\n\n  function handleChange(changes) {\n    handleRecipeChange(recipe.id, { ...recipe, ...changes });\n  }\n\n  function handleIngredientChange(id, ingredient) {\n    const newIngredients = [...recipe.ingredients];\n    const index = newIngredients.findIndex((i) => i.id === id);\n    newIngredients[index] = ingredient;\n    handleChange({ ingredients: newIngredients });\n  }\n\n  function handleIngredientAdd() {\n    const newIngredient = {\n      id: Date.now().toString(),\n      name: '',\n      amount: '',\n    };\n    handleChange({ ingredients: [...recipe.ingredients, newIngredient] });\n  }\n\n  function handleIngredientDelete(id) {\n    handleChange({\n      ingredients: recipe.ingredients.filter((i) => i.id !== id),\n    });\n  }\n\n  return (\n    <div className=\"recipe-edit\">\n      <div className=\"recipe-edit__remove-button-container\">\n        <button\n          className=\"btn recipe-edit__remove-button\"\n          onClick={() => handleRecipeSelect(undefined)}\n        >\n          &times;\n        </button>\n      </div>\n      <div className=\"recipe-edit__details-grid\">\n        <label htmlFor=\"name\" className=\"recipe-edit__label\">\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          id=\"name\"\n          value={recipe.name}\n          onChange={(e) => handleChange({ name: e.target.value })}\n          className=\"recipe-edit__input\"\n        />\n        <label htmlFor=\"cookTime\" className=\"recipe-edit__label\">\n          Cook Time\n        </label>\n        <input\n          type=\"text\"\n          name=\"cookTime\"\n          id=\"cookTime\"\n          value={recipe.cookTime}\n          onChange={(e) => handleChange({ cookTime: e.target.value })}\n          className=\"recipe-edit__input\"\n        />\n        <label htmlFor=\"servings\" className=\"recipe-edit__label\">\n          Servings\n        </label>\n        <input\n          type=\"number\"\n          min=\"1\"\n          name=\"servings\"\n          id=\"servings\"\n          value={recipe.servings}\n          onChange={(e) =>\n            handleChange({ servings: parseInt(e.target.value) || '' })\n          }\n          className=\"recipe-edit__input\"\n        />\n        <label htmlFor=\"instructions\" className=\"recipe-edit__label\">\n          Instructions\n        </label>\n        <textarea\n          name=\"instructions\"\n          className=\"recipe-edit__input\"\n          onChange={(e) => handleChange({ instructions: e.target.value })}\n          value={recipe.instructions}\n          id=\"instructions\"\n        />\n      </div>\n      <br />\n      <label className=\"recipe-edit__label\">Ingredients</label>\n      <div className=\"recipe-edit__ingredient-grid\">\n        <div>Name</div>\n        <div>Amount</div>\n        <div></div>\n        {recipe.ingredients.map((ingredient) => (\n          <RecipeIngredientEdit\n            key={ingredient.id}\n            handleIngredientChange={handleIngredientChange}\n            handleIngredientDelete={handleIngredientDelete}\n            ingredient={ingredient}\n          />\n        ))}\n      </div>\n      <div className=\"recipe-edit__add-ingredient-btn-container\">\n        <button\n          className=\"btn btn--primary\"\n          onClick={() => handleIngredientAdd()}\n        >\n          Add Ingredient\n        </button>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}